-- *******************************************************************************
-- *                                                                     
-- *   GRUPA LABORATORYJNA: 		               
-- *                                 
-- *******************************************************************************
-- * 																		     
-- *   Nazwisko i imię:                                                         
-- * 																		     
-- *******************************************************************************
-- * 																		     
-- *   Nr indeksu:                                        
-- * 																		     
-- *******************************************************************************
-- * 																		     
-- *   Temat projektu:                                                                
-- * 																		     
-- *******************************************************************************

-- PROSZĘ NIE UŻYWAĆ W SKRYPTACH ALIASÓW DLA SCHEMATÓW BAZ


-- -------------------------------------------------------------------------------
-- TWORZENIE STRUKTURY BAZY DANYCH  
-- [PAMIĘTAĆ O KLUCZACH OBCYCH]                                          
-- -------------------------------------------------------------------------------

-- Generated by Oracle SQL Developer Data Modeler 24.3.1.351.0831
--   at:        2025-03-10 15:24:45 CET
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE Balon 
    ( 
     ID_BALONU                 INTEGER  NOT NULL , 
     MODEL_BALONU              VARCHAR2 (30)  NOT NULL , 
     POJEMNOŚĆ                 INTEGER  NOT NULL , 
     STATUS_TECHNICZNY         VARCHAR2 (20)  NOT NULL , 
     DATA_OSTATNIEGO_PRZEGLĄDU DATE  NOT NULL 
    ) 
;

ALTER TABLE Balon 
    ADD CONSTRAINT Balon_PK PRIMARY KEY ( ID_BALONU ) ;

CREATE TABLE Klient 
    ( 
     ID_KLIENTA INTEGER  NOT NULL , 
     IMIĘ       VARCHAR2 (20)  NOT NULL , 
     NAZWISKO   VARCHAR2 (40)  NOT NULL , 
     "E-MAIL"   VARCHAR2 (30)  NOT NULL , 
     TELEFON    VARCHAR2 (12)  NOT NULL 
    ) 
;

ALTER TABLE Klient 
    ADD CONSTRAINT Klient_PK PRIMARY KEY ( ID_KLIENTA ) ;

CREATE TABLE Lokalizacja 
    ( 
     ID_LOKALIZACJI  INTEGER  NOT NULL , 
     NAZWA           VARCHAR2 (80)  NOT NULL , 
     WSPÓŁRZĘDNE_GPS VARCHAR2 (60)  NOT NULL , 
     OPIS            CLOB  NOT NULL 
    ) 
;

ALTER TABLE Lokalizacja 
    ADD CONSTRAINT Lokalizacja_PK PRIMARY KEY ( ID_LOKALIZACJI ) ;

CREATE TABLE Lot 
    ( 
     ID_LOTU                  INTEGER  NOT NULL , 
     Rezerwacja_ID_REZERWACJI INTEGER , 
     Balon_ID_BALONU          INTEGER  NOT NULL , 
     Pilot_ID_PILOTA          INTEGER  NOT NULL , 
     CZAS_TRWANIA             INTEGER  NOT NULL , 
     MAKSYMALNA_WYSOKOŚĆ      INTEGER  NOT NULL , 
     WARUNKI_POGODOWE         CLOB  NOT NULL 
    ) 
;

ALTER TABLE Lot 
    ADD CONSTRAINT Lot_PK PRIMARY KEY ( ID_LOTU ) ;

CREATE TABLE Pilot 
    ( 
     ID_PILOTA              INTEGER  NOT NULL , 
     IMIĘ                   VARCHAR2 (20)  NOT NULL , 
     NAZWISKO               VARCHAR2 (40)  NOT NULL , 
     NUMER_LICENCJI         VARCHAR2 (20)  NOT NULL , 
     DATA_WAŻNOŚCI_LICENCJI DATE  NOT NULL , 
     STATUS                 VARCHAR2 (30)  NOT NULL , 
     TELEFON                VARCHAR2 (15)  NOT NULL 
    ) 
;

ALTER TABLE Pilot 
    ADD CONSTRAINT Pilot_PK PRIMARY KEY ( ID_PILOTA ) ;

CREATE TABLE Płatność 
    ( 
     ID_PŁATNOŚCI     INTEGER  NOT NULL , 
     KWOTA            NUMBER (10,2)  NOT NULL , 
     METODA_PŁATNOŚCI VARCHAR2 (20)  NOT NULL , 
     STATUS_PŁATNOŚCI VARCHAR2 (20)  NOT NULL , 
     DATA_PŁATNOŚCI   DATE  NOT NULL 
    ) 
;

ALTER TABLE Płatność 
    ADD CONSTRAINT Płatność_PK PRIMARY KEY ( ID_PŁATNOŚCI ) ;

CREATE TABLE Raport_techniczny 
    ( 
     ID_RAPORTU           INTEGER  NOT NULL , 
     Balon_ID_BALONU      INTEGER , 
     DATA_PRZEPROWADZENIA DATE  NOT NULL , 
     OPIS_STANU           CLOB  NOT NULL , 
     ZALECENIA            CLOB  NOT NULL 
    ) 
;

ALTER TABLE Raport_techniczny 
    ADD CONSTRAINT Raport_techniczny_PK PRIMARY KEY ( ID_RAPORTU ) ;

CREATE TABLE Rezerwacja 
    ( 
     ID_REZERWACJI              INTEGER  NOT NULL , 
     DATA_REZERWACJI            DATE  NOT NULL , 
     DATA_LOTU                  DATE  NOT NULL , 
     LICZBA_UCZESTNIKOW         INTEGER  NOT NULL , 
     STATUS_REZERWACJI          VARCHAR2 (20)  NOT NULL , 
     Klient_ID_KLIENTA          INTEGER  NOT NULL , 
     Lokalizacja_ID_LOKALIZACJI INTEGER  NOT NULL , 
     Płatność_ID_PŁATNOŚCI      INTEGER  NOT NULL 
    ) 
;
CREATE UNIQUE INDEX Rezerwacja__IDX ON Rezerwacja 
    ( 
     Płatność_ID_PŁATNOŚCI ASC 
    ) 
;

ALTER TABLE Rezerwacja 
    ADD CONSTRAINT Rezerwacja_PK PRIMARY KEY ( ID_REZERWACJI ) ;

ALTER TABLE Lot 
    ADD CONSTRAINT Lot_Balon_FK FOREIGN KEY 
    ( 
     Balon_ID_BALONU
    ) 
    REFERENCES Balon 
    ( 
     ID_BALONU
    ) 
;

ALTER TABLE Lot 
    ADD CONSTRAINT Lot_Pilot_FK FOREIGN KEY 
    ( 
     Pilot_ID_PILOTA
    ) 
    REFERENCES Pilot 
    ( 
     ID_PILOTA
    ) 
;

ALTER TABLE Lot 
    ADD CONSTRAINT Lot_Rezerwacja_FK FOREIGN KEY 
    ( 
     Rezerwacja_ID_REZERWACJI
    ) 
    REFERENCES Rezerwacja 
    ( 
     ID_REZERWACJI
    ) 
;

ALTER TABLE Raport_techniczny 
    ADD CONSTRAINT Raport_techniczny_Balon_FK FOREIGN KEY 
    ( 
     Balon_ID_BALONU
    ) 
    REFERENCES Balon 
    ( 
     ID_BALONU
    ) 
;

ALTER TABLE Rezerwacja 
    ADD CONSTRAINT Rezerwacja_Klient_FK FOREIGN KEY 
    ( 
     Klient_ID_KLIENTA
    ) 
    REFERENCES Klient 
    ( 
     ID_KLIENTA
    ) 
;

ALTER TABLE Rezerwacja 
    ADD CONSTRAINT Rezerwacja_Lokalizacja_FK FOREIGN KEY 
    ( 
     Lokalizacja_ID_LOKALIZACJI
    ) 
    REFERENCES Lokalizacja 
    ( 
     ID_LOKALIZACJI
    ) 
;

ALTER TABLE Rezerwacja 
    ADD CONSTRAINT Rezerwacja_Płatność_FK FOREIGN KEY 
    ( 
     Płatność_ID_PŁATNOŚCI
    ) 
    REFERENCES Płatność 
    ( 
     ID_PŁATNOŚCI
    ) 
;



-- -------------------------------------------------------------------------------
-- POLECENIA:   5 X INSERT  DO WSZYSTKICH TABEL                                               
-- -------------------------------------------------------------------------------

INSERT INTO Płatność VALUES (1, 1500.00, 'Karta kredytowa', 'Zrealizowana', TO_DATE('2025-01-15', 'YYYY-MM-DD'));
INSERT INTO Płatność VALUES (2, 1000.00, 'Przelew bankowy', 'Oczekująca', TO_DATE('2025-01-20', 'YYYY-MM-DD'));
INSERT INTO Płatność VALUES (3, 500.00, 'Gotówka', 'Zrealizowana', TO_DATE('2024-08-10', 'YYYY-MM-DD'));
INSERT INTO Płatność VALUES (4, 2000.00, 'PayPal', 'Anulowana', TO_DATE('2025-02-05', 'YYYY-MM-DD'));
INSERT INTO Płatność VALUES (5, 1200.00, 'Przelew bankowy', 'Zrealizowana', TO_DATE('2025-02-05', 'YYYY-MM-DD'));

INSERT INTO Pilot VALUES (1, 'Marek', 'Zieliński', 'PL-12345', TO_DATE('2027-05-15', 'YYYY-MM-DD'), 'Aktywny', '600123456');
INSERT INTO Pilot VALUES (2, 'Ewa', 'Kaczmarek', 'PL-67890', TO_DATE('2026-08-20', 'YYYY-MM-DD'), 'Aktywny', '601987654');
INSERT INTO Pilot VALUES (3, 'Andrzej', 'Kowalczyk', 'PL-24680', TO_DATE('2025-12-30', 'YYYY-MM-DD'), 'Aktywny', '602345678');
INSERT INTO Pilot VALUES (4, 'Monika', 'Wójcik', 'PL-13579', TO_DATE('2028-03-22', 'YYYY-MM-DD'), 'Aktywny', '603456789');
INSERT INTO Pilot VALUES (5, 'Adam', 'Wójcik', 'PL-54321', TO_DATE('2025-09-10', 'YYYY-MM-DD'), 'Nieaktywny', '604567890');

INSERT INTO Klient VALUES (1, 'Jan', 'Kowalski', 'jan.kowalski@example.com', '123456789');
INSERT INTO Klient VALUES (2, 'Anna', 'Nowak', 'anna.nowak@example.com', '987654321');
INSERT INTO Klient VALUES (3, 'Piotr', 'Nowicki', 'piotr.nowicki@example.com', '112233445');
INSERT INTO Klient VALUES (4, 'Karolina', 'Mazur', 'karolina.mazur@example.com', '998877665');
INSERT INTO Klient VALUES (5, 'Tomasz', 'Lis', 'tomasz.lis@example.com', '776655443');

INSERT INTO Lokalizacja VALUES (1, 'Opole', '50.67511,17.92130', 'Loty nad panoramą miasta i okolicznymi miejscowościami, z malowniczymi krajobrazami pól, lasów oraz zbiorników wodnych.');
INSERT INTO Lokalizacja VALUES (2, 'Kędzierzyn-Koźle', '50.34987,18.21991', 'Widoki na zakola Odry, porty rzeczne oraz zabytkową zabudowę Starego Koźla.');
INSERT INTO Lokalizacja VALUES (3, 'Gliwice', '50.29449,18.67138', 'Możliwość podziwiania miasta oraz okolicznych terenów z perspektywy lotu balonem.');
INSERT INTO Lokalizacja VALUES (4, 'Katowice', '50.27095,19.03999', 'Loty nad stolicą Górnego Śląska, oferujące widoki na miejską architekturę i otaczające tereny zielone.');
INSERT INTO Lokalizacja VALUES (5, 'Kraków', '50.06143,19.93658', 'Panorama miasta z lotu ptaka, w tym zabytkowe centrum, Wisła oraz okoliczne tereny.');
INSERT INTO Lokalizacja VALUES (6, 'Bielsko-Biała', '49.82245,19.04686', 'Loty nad malowniczymi terenami Podbeskidzia, z widokami na góry i lasy.');
INSERT INTO Lokalizacja VALUES (7, 'Częstochowa', '50.81136,19.12071', 'Możliwość podziwiania miasta oraz okolicznych krajobrazów.');
INSERT INTO Lokalizacja VALUES (8, 'Jura Krakowsko-Częstochowska', '50.60190,19.55188', 'Widoki na wapienne wzgórza, zamki i malownicze krajobrazy tego regionu.');
INSERT INTO Lokalizacja VALUES (9, 'Białka Tatrzańska', '49.39845,20.08369', 'Loty w ramach zawodów balonowych "Odlotowa Małopolska", oferujące przepiękne widoki na Podhale.');
INSERT INTO Lokalizacja VALUES (10, 'Tatry', '49.27722,20.14062', 'Spektakularne loty nad najwyższymi górami w Polsce, z widokami na szczyty, doliny i jeziora.');

INSERT INTO Balon VALUES (1, 'X-200', 5, 'Sprawny', TO_DATE('2024-06-15', 'YYYY-MM-DD'));
INSERT INTO Balon VALUES (2, 'Y-250', 5, 'Sprawny', TO_DATE('2024-06-25', 'YYYY-MM-DD'));
INSERT INTO Balon VALUES (3, 'Z-500', 4, 'Sprawny', TO_DATE('2025-01-15', 'YYYY-MM-DD'));
INSERT INTO Balon VALUES (4, 'B-150', 8, 'W konserwacji', TO_DATE('2023-08-15', 'YYYY-MM-DD'));
INSERT INTO Balon VALUES (5, 'A-300', 6, 'Wymaga przeglądu',TO_DATE('2024-01-05', 'YYYY-MM-DD'));

INSERT INTO Raport_techniczny VALUES (1, 1, TO_DATE('2024-06-16', 'YYYY-MM-DD'), 'Balon w pełni sprawny, brak uszkodzeń.', 'Kontrola rutynowa za 6 miesięcy.');
INSERT INTO Raport_techniczny VALUES (2, 2, TO_DATE('2024-06-26', 'YYYY-MM-DD'), 'Stan techniczny bardzo dobry, drobne ślady zużycia materiału.', 'Zaleca się kontrolę poszycia w ciągu 3 miesięcy.');
INSERT INTO Raport_techniczny VALUES (3, 3, TO_DATE('2025-01-16', 'YYYY-MM-DD'), 'Balon sprawny, konieczna wymiana liny mocującej.', 'Wymiana liny przed kolejnym lotem.');
INSERT INTO Raport_techniczny VALUES (4, 4, TO_DATE('2023-08-16', 'YYYY-MM-DD'), 'Balon w konserwacji, wymagane czyszczenie palników.', 'Zlecić serwis palników przed wznowieniem lotów.');
INSERT INTO Raport_techniczny VALUES (5, 5, TO_DATE('2024-01-06', 'YYYY-MM-DD'), 'Balon wymaga przeglądu, zużycie materiału poszycia.', 'Przegląd i ewentualna naprawa poszycia przed następnym lotem.');

INSERT INTO Rezerwacja VALUES (1, TO_DATE('2025-01-15', 'YYYY-MM-DD'), TO_DATE('2025-06-15', 'YYYY-MM-DD'),2, 'Potwierdzona',1,2,1);
INSERT INTO Rezerwacja VALUES (2, TO_DATE('2025-01-20', 'YYYY-MM-DD'), TO_DATE('2025-04-10', 'YYYY-MM-DD'),4, 'Oczekująca',2,4,2);
INSERT INTO Rezerwacja VALUES (3, TO_DATE('2024-08-10', 'YYYY-MM-DD'), TO_DATE('2025-08-15', 'YYYY-MM-DD'),5, 'Anulowana',3,6,3);
INSERT INTO Rezerwacja VALUES (4, TO_DATE('2025-02-05', 'YYYY-MM-DD'), TO_DATE('2025-06-09', 'YYYY-MM-DD'),3, 'Potwierdzona',4,5,4);
INSERT INTO Rezerwacja VALUES (5, TO_DATE('2025-02-05', 'YYYY-MM-DD'), TO_DATE('2025-06-15', 'YYYY-MM-DD'),1, 'Potwierdzona',5,1,   5);

INSERT INTO Lot VALUES (1, 1, 2, 2, 90, 1200, 'Bezchmurne niebo, lekki wiatr');
INSERT INTO Lot VALUES (2, 2, 4, 4, 75, 1000, 'Pogodne warunki, umiarkowany wiatr');
INSERT INTO Lot VALUES (3, 3, 3, 3, 60, 900, 'Częściowe zachmurzenie, brak opadów');
INSERT INTO Lot VALUES (4, 4, 5, 1, 80, 1100, 'Słonecznie, niewielkie podmuchy wiatru');
INSERT INTO Lot VALUES (5, 5, 1, 2, 95, 1300, 'Idealne warunki, bezwietrznie');

select * from płatność;
select * from rezerwacja;
select * from pilot;
select * from lot;
select * from raport_techniczny;
select * from lokalizacja;
select * from klient;
select * from balon;

-- -------------------------------------------------------------------------------
-- POLECENIA:   10 X SELECT  
--( PRZYKŁADY ROZBUDOWANYCH POLECEŃ Z JOIN NA MIN. 3 TABELACH, WARUNKAMI, GROUP BY , podzapytania, funkje ITP )
-- POZIOM ZAAWANSOWANIA MA WPŁYW NA OCENĘ                                                   
-- -------------------------------------------------------------------------------


-- 1
SELECT * FROM REZERWACJA WHERE STATUS_REZERWACJI = 'Potwierdzona';
-- 2
SELECT AVG(KWOTA) AS ŚREDNIA_KWOTA FROM PŁATNOŚĆ;
-- 3
SELECT IMIĘ, NAZWISKO, NUMER_LICENCJI 
FROM PILOT 
WHERE STATUS = 'Aktywny';
-- 4
SELECT * FROM BALON WHERE STATUS IN ('W konserwacji', 'Wymaga przeglądu');
-- 5
SELECT KLIENT_ID_KLIENTA, COUNT(*) AS LICZBA_REZERWACJI
FROM REZERWACJA
GROUP BY KLIENT_ID_KLIENTA;
-- 6
SELECT LOT.ID_LOTU, LOT.CZAS_TRWANIA, LOT.WARUNKI_POGODOWE, LOT.MAKSYMALNA_WYSOKOŚĆ, PILOT.IMIĘ, PILOT.NAZWISKO, BALON.MODEL_BALONU
FROM LOT
JOIN PILOT ON LOT.PILOT_ID_PILOTA = PILOT.ID_PILOTA
JOIN BALON ON LOT.BALON_ID_BALONU = BALON.ID_BALONU;
-- 7
SELECT * FROM PŁATNOŚĆ WHERE EXTRACT (YEAR FROM DATA_PŁATNOŚCI) = 2025;
-- 8
SELECT K.ID_KLIENTA, K.IMIĘ, K.NAZWISKO, 
COUNT(R.ID_REZERWACJI) AS LICZBA_REZERWACJI,
LISTAGG(L.NAZWA, ', ') WITHIN GROUP (ORDER BY L.NAZWA)
FROM KLIENT K
JOIN REZERWACJA R ON K.ID_KLIENTA = R.KLIENT_ID_KLIENTA
JOIN LOKALIZACJA L ON R.LOKALIZACJA_ID_LOKALIZACJI = L.ID_LOKALIZACJI
GROUP BY K.ID_KLIENTA, K.IMIĘ, K.NAZWISKO
ORDER BY LICZBA_REZERWACJI DESC;
-- 9
SELECT L.ID_LOTU, P.IMIĘ, P.NAZWISKO, B.MODEL_BALONU, R.LOKALIZACJA_ID_LOKALIZACJI, L.CZAS_TRWANIA
FROM LOT L 
JOIN PILOT P ON L.PILOT_ID_PILOTA = P.ID_PILOTA
JOIN BALON B ON L.BALON_ID_BALONU = B.ID_BALONU
JOIN REZERWACJA R ON L.REZERWACJA_ID_REZERWACJI = R.ID_REZERWACJI
WHERE L.CZAS_TRWANIA > (SELECT AVG(L.CZAS_TRWANIA) FROM LOT)
ORDER BY L.CZAS_TRWANIA DESC;
-- 10
SELECT K.ID_KLIENTA, K.IMIĘ, K.NAZWISKO,
COUNT(R.ID_REZERWACJI),
COALESCE(SUM(P.KWOTA), 0) AS SUMA_KWOT,
LISTAGG(R.STATUS_REZERWACJI, ', ') WITHIN GROUP  (ORDER BY R.ID_REZERWACJI) AS STATUS_REZERWACJI
FROM KLIENT K
LEFT JOIN REZERWACJA R ON K.ID_KLIENTA = R.KLIENT_ID_KLIENTA
LEFT JOIN PŁATNOŚĆ P ON R.ID_REZERWACJI = P.ID_PŁATNOŚCI
GROUP BY K.ID_KLIENTA, K.IMIĘ, K.NAZWISKO
ORDER BY SUMA_KWOT;

-- -------------------------------------------------------------------------------
-- POLECENIA:   5 X UPDATE     (POLECENIA POWINNY WYKORZYSTYWAĆ PODZAPYTANIA, funkcje itp)      
-- POZIOM ZAAWANSOWANIA MA WPŁYW NA OCENĘ                                               
-- -------------------------------------------------------------------------------

-- 1
UPDATE REZERWACJA
SET STATUS_REZERWACJI ='Anulowana'
WHERE ID_REZERWACJI IN (
    SELECT R.ID_REZERWACJI
    FROM REZERWACJA R
    LEFT JOIN PŁATNOŚĆ P ON R.ID_REZERWACJI = P.ID_PŁATNOŚCI
    WHERE P.ID_PŁATNOŚCI IS NULL);
    
-- 2
UPDATE LOT
SET MAKSYMALNA_WYSOKOŚĆ = (SELECT AVG(MAKSYMALNA_WYSOKOŚĆ)
    FROM LOT
    )
    WHERE MAKSYMALNA_WYSOKOŚĆ < ( SELECT AVG(MAKSYMALNA_WYSOKOŚĆ)
        FROM LOT) ;
        
-- 3
UPDATE BALON
SET STATUS_TECHNICZNY = 'Wymaga przeglądu'
WHERE DATA_OSTATNIEGO_PRZEGLĄDU < ADD_MONTHS(SYSDATE, -12);

-- 4
UPDATE PILOT
SET TELEFON = -1
WHERE STATUS = 'Nieaktywny';

-- 5
UPDATE PŁATNOŚĆ
SET KWOTA = KWOTA * 0.9
WHERE ID_PŁATNOŚCI IN (
    SELECT R.ID_REZERWACJI
    FROM REZERWACJA R
    WHERE R.KLIENT_ID_KLIENTA IN (
        SELECT KLIENT_ID_KLIENTA
        FROM REZERWACJA
        GROUP BY KLIENT_ID_KLIENTA
        HAVING COUNT(*) > 3
    )
);


-- -------------------------------------------------------------------------------
-- POLECENIA:   5 X DELETE     (TEŻ Z PODZAPYTANIAMI itp)              
-- POZIOM ZAAWANSOWANIA MA WPŁYW NA OCENĘ                                        
-- -------------------------------------------------------------------------------

-- 1
DELETE FROM REZERWACJA
    WHERE STATUS_REZERWACJI = 'Anulowana'
    AND DATA_REZERWACJI < ADD_MONTHS(SYSDATE, -12);

-- 2
DELETE FROM KLIENT 
WHERE ID_KLIENTA IN (
    SELECT ID_KLIENTA
    FROM KLIENT
    LEFT JOIN REZERWACJA R ON KLIENT.ID_KLIENTA = R.KLIENT_ID_KLIENTA
    WHERE R.ID_REZERWACJI IS NULL) ;
    
-- 3
DELETE FROM PŁATNOŚĆ
WHERE ID_PŁATNOŚCI IN (
    SELECT P.ID_PŁATNOŚCI
    FROM PŁATNOŚĆ P
    JOIN REZERWACJA R ON P.ID_PŁATNOŚCI = R.ID_REZERWACJI
    WHERE R.STATUS_REZERWACJI = 'Anulowana') ;
    
-- 4
DELETE FROM RAPORT_TECHNICZNY
WHERE BALON_ID_BALONU NOT IN (
    SELECT ID_BALONU FROM BALON) ;
    
-- 5
DELETE FROM LOT 
WHERE DBMS_LOB.SUBSTR(WARUNKI_POGODOWE, 1000) IN ('Burza', 'Silny wiatr') ;
-- -------------------------------------------------------------------------------
-- USUWANIE STRUKTURY BAZY DANYCH 
-- NALEŻY USUNAĆ TABELE, A NIE BAZĘ                                           
-- -------------------------------------------------------------------------------
--
DROP TABLE Raport_Techniczny CASCADE CONSTRAINTS;
DROP TABLE Lot CASCADE CONSTRAINTS;
DROP TABLE Płatność CASCADE CONSTRAINTS;
DROP TABLE Rezerwacja CASCADE CONSTRAINTS;
DROP TABLE Pilot CASCADE CONSTRAINTS;
DROP TABLE Balon CASCADE CONSTRAINTS;
DROP TABLE Lokalizacja CASCADE CONSTRAINTS;
DROP TABLE Klient CASCADE CONSTRAINTS;