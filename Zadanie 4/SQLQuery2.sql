-- Generated by Oracle SQL Developer Data Modeler 24.3.1.351.0831
--   at:        2025-03-19 21:01:12 CET
--   site:      SQL Server 2012
--   type:      SQL Server 2012



CREATE TABLE Balon 
    (
     ID_BALONU INTEGER NOT NULL , 
     MODEL VARCHAR (30) NOT NULL , 
     POJEMNOŒÆ INTEGER NOT NULL , 
     STATUS_TECHNICZNY VARCHAR (20) NOT NULL , 
     DATA_OSTATNIEGO_PRZEGL¥DU DATE NOT NULL 
    )
GO

ALTER TABLE Balon ADD CONSTRAINT Balon_PK PRIMARY KEY CLUSTERED (ID_BALONU)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
GO

CREATE TABLE Klient 
    (
     ID_KLIENTA INTEGER NOT NULL , 
     IMIÊ VARCHAR (20) NOT NULL , 
     NAZWISKO VARCHAR (40) NOT NULL , 
     "E-MAIL" VARCHAR (30) NOT NULL , 
     TELEFON VARCHAR (12) NOT NULL 
    )
GO

ALTER TABLE Klient ADD CONSTRAINT Klient_PK PRIMARY KEY CLUSTERED (ID_KLIENTA)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
GO

CREATE TABLE Lokalizacja 
    (
     ID_LOKALIZACJI INTEGER NOT NULL , 
     NAZWA VARCHAR (80) NOT NULL , 
     WSPÓ£RZÊDNE_GPS VARCHAR (60) NOT NULL , 
     OPIS TEXT NOT NULL 
    )
GO

ALTER TABLE Lokalizacja ADD CONSTRAINT Lokalizacja_PK PRIMARY KEY CLUSTERED (ID_LOKALIZACJI)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
GO

CREATE TABLE Lot 
    (
     ID_LOTU INTEGER NOT NULL , 
     Rezerwacja_ID_REZERWACJI INTEGER , 
     Balon_ID_BALONU INTEGER NOT NULL , 
     Pilot_ID_PILOTA INTEGER NOT NULL , 
     CZAS_TRWANIA INTEGER NOT NULL , 
     MAKSYMALNA_WYSOKOŒÆ INTEGER NOT NULL , 
     WARUNKI_POGODOWE TEXT NOT NULL 
    )
GO

ALTER TABLE Lot ADD CONSTRAINT Lot_PK PRIMARY KEY CLUSTERED (ID_LOTU)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
GO

CREATE TABLE Pilot 
    (
     ID_PILOTA INTEGER NOT NULL , 
     IMIÊ VARCHAR (20) NOT NULL , 
     NAZWISKO VARCHAR (40) NOT NULL , 
     NUMER_LICENCJI VARCHAR (20) NOT NULL , 
     DATA_WA¯NOŒCI_LICENCJI DATE NOT NULL , 
     STATUS VARCHAR (30) NOT NULL , 
     TELEFON VARCHAR (15) NOT NULL 
    )
GO

ALTER TABLE Pilot ADD CONSTRAINT Pilot_PK PRIMARY KEY CLUSTERED (ID_PILOTA)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
GO

CREATE TABLE P³atnoœæ 
    (
     ID_P£ATNOŒCI INTEGER NOT NULL , 
     KWOTA DECIMAL (10,2) NOT NULL , 
     METODA_P£ATNOŒCI VARCHAR (20) NOT NULL , 
     STATUS_P£ATNOŒCI VARCHAR (20) NOT NULL , 
     DATA_P£ATNOŒCI DATE NOT NULL 
    )
GO

ALTER TABLE P³atnoœæ ADD CONSTRAINT P³atnoœæ_PK PRIMARY KEY CLUSTERED (ID_P£ATNOŒCI)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
GO

CREATE TABLE Raport_techniczny 
    (
     ID_RAPORTU INTEGER NOT NULL , 
     Balon_ID_BALONU INTEGER , 
     DATA_PRZEPROWADZENIA DATE NOT NULL , 
     OPIS_STANU TEXT NOT NULL , 
     ZALECENIA TEXT NOT NULL 
    )
GO

ALTER TABLE Raport_techniczny ADD CONSTRAINT Raport_techniczny_PK PRIMARY KEY CLUSTERED (ID_RAPORTU)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
GO

CREATE TABLE Rezerwacja 
    (
     ID_REZERWACJI INTEGER NOT NULL , 
     DATA_REZERWACJI DATE NOT NULL , 
     DATA_LOTU DATE NOT NULL , 
     LICZBA_UCZESTNIKOW INTEGER NOT NULL , 
     STATUS_REZERWACJI VARCHAR (20) NOT NULL , 
     Klient_ID_KLIENTA INTEGER NOT NULL , 
     Lokalizacja_ID_LOKALIZACJI INTEGER NOT NULL , 
     P³atnoœæ_ID_P£ATNOŒCI INTEGER NOT NULL 
    )
GO 

    


CREATE UNIQUE NONCLUSTERED INDEX 
    Rezerwacja__IDX ON Rezerwacja 
    ( 
     P³atnoœæ_ID_P£ATNOŒCI 
    ) 
GO

ALTER TABLE Rezerwacja ADD CONSTRAINT Rezerwacja_PK PRIMARY KEY CLUSTERED (ID_REZERWACJI)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
GO

ALTER TABLE Lot 
    ADD CONSTRAINT Lot_Balon_FK FOREIGN KEY 
    ( 
     Balon_ID_BALONU
    ) 
    REFERENCES Balon 
    ( 
     ID_BALONU 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO

ALTER TABLE Lot 
    ADD CONSTRAINT Lot_Pilot_FK FOREIGN KEY 
    ( 
     Pilot_ID_PILOTA
    ) 
    REFERENCES Pilot 
    ( 
     ID_PILOTA 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO

ALTER TABLE Lot 
    ADD CONSTRAINT Lot_Rezerwacja_FK FOREIGN KEY 
    ( 
     Rezerwacja_ID_REZERWACJI
    ) 
    REFERENCES Rezerwacja 
    ( 
     ID_REZERWACJI 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO

ALTER TABLE Raport_techniczny 
    ADD CONSTRAINT Raport_techniczny_Balon_FK FOREIGN KEY 
    ( 
     Balon_ID_BALONU
    ) 
    REFERENCES Balon 
    ( 
     ID_BALONU 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO

ALTER TABLE Rezerwacja 
    ADD CONSTRAINT Rezerwacja_Klient_FK FOREIGN KEY 
    ( 
     Klient_ID_KLIENTA
    ) 
    REFERENCES Klient 
    ( 
     ID_KLIENTA 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO

ALTER TABLE Rezerwacja 
    ADD CONSTRAINT Rezerwacja_Lokalizacja_FK FOREIGN KEY 
    ( 
     Lokalizacja_ID_LOKALIZACJI
    ) 
    REFERENCES Lokalizacja 
    ( 
     ID_LOKALIZACJI 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO

ALTER TABLE Rezerwacja 
    ADD CONSTRAINT Rezerwacja_P³atnoœæ_FK FOREIGN KEY 
    ( 
     P³atnoœæ_ID_P£ATNOŒCI
    ) 
    REFERENCES P³atnoœæ 
    ( 
     ID_P£ATNOŒCI 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO



-- -------------------------------------------------------------------------------
-- POLECENIA:   5 X INSERT  DO WSZYSTKICH TABEL                                               
-- -------------------------------------------------------------------------------




-- P³atnoœæ
INSERT INTO P³atnoœæ (ID_P£ATNOŒCI, KWOTA, METODA_P£ATNOŒCI, STATUS_P£ATNOŒCI, DATA_P£ATNOŒCI)
VALUES (1, 1500.00, 'Karta kredytowa', 'Zrealizowana', CAST('2025-01-15' AS DATETIME));
INSERT INTO P³atnoœæ (ID_P£ATNOŒCI, KWOTA, METODA_P£ATNOŒCI, STATUS_P£ATNOŒCI, DATA_P£ATNOŒCI)
VALUES (2, 1000.00, 'Przelew bankowy', 'Oczekuj¹ca', CAST('2025-01-20' AS DATETIME));
INSERT INTO P³atnoœæ (ID_P£ATNOŒCI, KWOTA, METODA_P£ATNOŒCI, STATUS_P£ATNOŒCI, DATA_P£ATNOŒCI)
VALUES (3, 500.00, 'Gotówka', 'Zrealizowana', CAST('2024-08-10' AS DATETIME));
INSERT INTO P³atnoœæ (ID_P£ATNOŒCI, KWOTA, METODA_P£ATNOŒCI, STATUS_P£ATNOŒCI, DATA_P£ATNOŒCI)
VALUES (4, 2000.00, 'PayPal', 'Anulowana', CAST('2025-02-05' AS DATETIME));
INSERT INTO P³atnoœæ (ID_P£ATNOŒCI, KWOTA, METODA_P£ATNOŒCI, STATUS_P£ATNOŒCI, DATA_P£ATNOŒCI)
VALUES (5, 1200.00, 'Przelew bankowy', 'Zrealizowana', CAST('2025-02-05' AS DATETIME));

-- Pilot
INSERT INTO Pilot (ID_PILOTA, IMIÊ, NAZWISKO, NUMER_LICENCJI, DATA_WA¯NOŒCI_LICENCJI, STATUS, TELEFON)
VALUES (1, 'Marek', 'Zieliñski', 'PL-12345', CAST('2027-05-15' AS DATETIME), 'Aktywny', '600123456');
INSERT INTO Pilot (ID_PILOTA, IMIÊ, NAZWISKO, NUMER_LICENCJI, DATA_WA¯NOŒCI_LICENCJI, STATUS, TELEFON)
VALUES (2, 'Ewa', 'Kaczmarek', 'PL-67890', CAST('2026-08-20' AS DATETIME), 'Aktywny', '601987654');
INSERT INTO Pilot (ID_PILOTA, IMIÊ, NAZWISKO, NUMER_LICENCJI, DATA_WA¯NOŒCI_LICENCJI, STATUS, TELEFON)
VALUES (3, 'Andrzej', 'Kowalczyk', 'PL-24680', CAST('2025-12-30' AS DATETIME), 'Aktywny', '602345678');
INSERT INTO Pilot (ID_PILOTA, IMIÊ, NAZWISKO, NUMER_LICENCJI, DATA_WA¯NOŒCI_LICENCJI, STATUS, TELEFON)
VALUES (4, 'Monika', 'Wójcik', 'PL-13579', CAST('2028-03-22' AS DATETIME), 'Aktywny', '603456789');
INSERT INTO Pilot (ID_PILOTA, IMIÊ, NAZWISKO, NUMER_LICENCJI, DATA_WA¯NOŒCI_LICENCJI, STATUS, TELEFON)
VALUES (5, 'Adam', 'Wójcik', 'PL-54321', CAST('2025-09-10' AS DATETIME), 'Nieaktywny', '604567890');

-- Klient
INSERT INTO Klient (ID_KLIENTA, IMIÊ, NAZWISKO, "E-MAIL", TELEFON)
VALUES (1, 'Jan', 'Kowalski', 'jan.kowalski@example.com', '123456789');
INSERT INTO Klient (ID_KLIENTA, IMIÊ, NAZWISKO, "E-MAIL", TELEFON)
VALUES (2, 'Anna', 'Nowak', 'anna.nowak@example.com', '987654321');
INSERT INTO Klient (ID_KLIENTA, IMIÊ, NAZWISKO, "E-MAIL", TELEFON)
VALUES (3, 'Piotr', 'Nowicki', 'piotr.nowicki@example.com', '112233445');
INSERT INTO Klient (ID_KLIENTA, IMIÊ, NAZWISKO, "E-MAIL", TELEFON)
VALUES (4, 'Karolina', 'Mazur', 'karolina.mazur@example.com', '998877665');
INSERT INTO Klient (ID_KLIENTA, IMIÊ, NAZWISKO, "E-MAIL", TELEFON)
VALUES (5, 'Tomasz', 'Lis', 'tomasz.lis@example.com', '776655443');

-- Lokalizacja
INSERT INTO Lokalizacja (ID_LOKALIZACJI, NAZWA, WSPÓ£RZÊDNE_GPS, OPIS)
VALUES (1, 'Opole', '50.67511,17.92130', 'Loty nad panoram¹ miasta i okolicznymi miejscowoœciami, z malowniczymi krajobrazami pól, lasów oraz zbiorników wodnych.');
INSERT INTO Lokalizacja (ID_LOKALIZACJI, NAZWA, WSPÓ£RZÊDNE_GPS, OPIS)
VALUES (2, 'Kêdzierzyn-KoŸle', '50.34987,18.21991', 'Widoki na zakola Odry, porty rzeczne oraz zabytkow¹ zabudowê Starego KoŸla.');
INSERT INTO Lokalizacja (ID_LOKALIZACJI, NAZWA, WSPÓ£RZÊDNE_GPS, OPIS)
VALUES (3, 'Gliwice', '50.29449,18.67138', 'Mo¿liwoœæ podziwiania miasta oraz okolicznych terenów z perspektywy lotu balonem.');
INSERT INTO Lokalizacja (ID_LOKALIZACJI, NAZWA, WSPÓ£RZÊDNE_GPS, OPIS)
VALUES (4, 'Katowice', '50.27095,19.03999', 'Loty nad stolic¹ Górnego Œl¹ska, oferuj¹ce widoki na miejsk¹ architekturê i otaczaj¹ce tereny zielone.');
INSERT INTO Lokalizacja (ID_LOKALIZACJI, NAZWA, WSPÓ£RZÊDNE_GPS, OPIS)
VALUES (5, 'Kraków', '50.06143,19.93658', 'Panorama miasta z lotu ptaka, w tym zabytkowe centrum, Wis³a oraz okoliczne tereny.');

-- Balon
INSERT INTO Balon (ID_BALONU, MODEL, POJEMNOŒÆ, STATUS_TECHNICZNY, DATA_OSTATNIEGO_PRZEGL¥DU)
VALUES (1, 'X-200', 5, 'Sprawny', CAST('2024-06-15' AS DATETIME));
INSERT INTO Balon (ID_BALONU, MODEL, POJEMNOŒÆ, STATUS_TECHNICZNY, DATA_OSTATNIEGO_PRZEGL¥DU)
VALUES (2, 'Y-250', 5, 'Sprawny', CAST('2024-06-25' AS DATETIME));
INSERT INTO Balon (ID_BALONU, MODEL, POJEMNOŒÆ, STATUS_TECHNICZNY, DATA_OSTATNIEGO_PRZEGL¥DU)
VALUES (3, 'Z-500', 4, 'Sprawny', CAST('2025-01-15' AS DATETIME));
INSERT INTO Balon (ID_BALONU, MODEL, POJEMNOŒÆ, STATUS_TECHNICZNY, DATA_OSTATNIEGO_PRZEGL¥DU)
VALUES (4, 'B-150', 8, 'W naprawie', CAST('2024-09-05' AS DATETIME));
INSERT INTO Balon (ID_BALONU, MODEL, POJEMNOŒÆ, STATUS_TECHNICZNY, DATA_OSTATNIEGO_PRZEGL¥DU)
VALUES (5, 'C-300', 6, 'Sprawny', CAST('2025-03-01' AS DATETIME));

-- Raport_techniczny
INSERT INTO Raport_techniczny (ID_RAPORTU, Balon_ID_BALONU, DATA_PRZEPROWADZENIA, OPIS_STANU, ZALECENIA)
VALUES (1, 1, CAST('2024-06-10' AS DATETIME), 'Balon w dobrym stanie technicznym.', 'Kontrola po locie.');
INSERT INTO Raport_techniczny (ID_RAPORTU, Balon_ID_BALONU, DATA_PRZEPROWADZENIA, OPIS_STANU, ZALECENIA)
VALUES (2, 2, CAST('2024-06-20' AS DATETIME), 'Balon w dobrym stanie technicznym.', 'Wymiana linek');
INSERT INTO Raport_techniczny (ID_RAPORTU, Balon_ID_BALONU, DATA_PRZEPROWADZENIA, OPIS_STANU, ZALECENIA)
VALUES (3, 3, CAST('2025-01-10' AS DATETIME), 'Balon w dobrym stanie technicznym.', 'Kontrola systemu balastowego');
INSERT INTO Raport_techniczny (ID_RAPORTU, Balon_ID_BALONU, DATA_PRZEPROWADZENIA, OPIS_STANU, ZALECENIA)
VALUES (4, 4, CAST('2024-08-30' AS DATETIME), 'Balon w naprawie', 'Wymiana gondoli');
INSERT INTO Raport_techniczny (ID_RAPORTU, Balon_ID_BALONU, DATA_PRZEPROWADZENIA, OPIS_STANU, ZALECENIA)
VALUES (5, 5, CAST('2025-02-15' AS DATETIME), 'Balon w dobrym stanie technicznym.', 'Kontrola pow³ok');

-- Rezerwacja
INSERT INTO Rezerwacja (ID_REZERWACJI, DATA_REZERWACJI, DATA_LOTU, LICZBA_UCZESTNIKOW, STATUS_REZERWACJI, Klient_ID_KLIENTA, Lokalizacja_ID_LOKALIZACJI, P³atnoœæ_ID_P£ATNOŒCI)
VALUES (1, CAST('2025-01-10' AS DATETIME), CAST('2025-01-20' AS DATETIME), 3, 'Zatwierdzona', 1, 1, 1);
INSERT INTO Rezerwacja (ID_REZERWACJI, DATA_REZERWACJI, DATA_LOTU, LICZBA_UCZESTNIKOW, STATUS_REZERWACJI, Klient_ID_KLIENTA, Lokalizacja_ID_LOKALIZACJI, P³atnoœæ_ID_P£ATNOŒCI)
VALUES (2, CAST('2025-01-15' AS DATETIME), CAST('2025-02-01' AS DATETIME), 2, 'Zatwierdzona', 2, 2, 2);
INSERT INTO Rezerwacja (ID_REZERWACJI, DATA_REZERWACJI, DATA_LOTU, LICZBA_UCZESTNIKOW, STATUS_REZERWACJI, Klient_ID_KLIENTA, Lokalizacja_ID_LOKALIZACJI, P³atnoœæ_ID_P£ATNOŒCI)
VALUES (3, CAST('2025-01-20' AS DATETIME), CAST('2025-02-10' AS DATETIME), 4, 'Oczekuj¹ca', 3, 3, 3);
INSERT INTO Rezerwacja (ID_REZERWACJI, DATA_REZERWACJI, DATA_LOTU, LICZBA_UCZESTNIKOW, STATUS_REZERWACJI, Klient_ID_KLIENTA, Lokalizacja_ID_LOKALIZACJI, P³atnoœæ_ID_P£ATNOŒCI)
VALUES (4, CAST('2025-01-25' AS DATETIME), CAST('2025-03-01' AS DATETIME), 5, 'Oczekuj¹ca', 4, 4, 4);
INSERT INTO Rezerwacja (ID_REZERWACJI, DATA_REZERWACJI, DATA_LOTU, LICZBA_UCZESTNIKOW, STATUS_REZERWACJI, Klient_ID_KLIENTA, Lokalizacja_ID_LOKALIZACJI, P³atnoœæ_ID_P£ATNOŒCI)
VALUES (5, CAST('2025-01-30' AS DATETIME), CAST('2025-03-10' AS DATETIME), 6, 'Zatwierdzona', 5, 5, 5);

-- Lot
INSERT INTO Lot (ID_LOTU, Rezerwacja_ID_REZERWACJI, Balon_ID_BALONU, Pilot_ID_PILOTA, CZAS_TRWANIA, MAKSYMALNA_WYSOKOŒÆ, WARUNKI_POGODOWE)
VALUES (1, 1, 1, 1, 90, 3000, 'S³onecznie');
INSERT INTO Lot (ID_LOTU, Rezerwacja_ID_REZERWACJI, Balon_ID_BALONU, Pilot_ID_PILOTA, CZAS_TRWANIA, MAKSYMALNA_WYSOKOŒÆ, WARUNKI_POGODOWE)
VALUES (2, 2, 2, 2, 120, 3500, 'Czêœciowe zachmurzenie');
INSERT INTO Lot (ID_LOTU, Rezerwacja_ID_REZERWACJI, Balon_ID_BALONU, Pilot_ID_PILOTA, CZAS_TRWANIA, MAKSYMALNA_WYSOKOŒÆ, WARUNKI_POGODOWE)
VALUES (3, 3, 3, 3, 110, 3200, 'Wietrznie');
INSERT INTO Lot (ID_LOTU, Rezerwacja_ID_REZERWACJI, Balon_ID_BALONU, Pilot_ID_PILOTA, CZAS_TRWANIA, MAKSYMALNA_WYSOKOŒÆ, WARUNKI_POGODOWE)
VALUES (4, 4, 4, 4, 100, 3000, 'Bezchmurnie');
INSERT INTO Lot (ID_LOTU, Rezerwacja_ID_REZERWACJI, Balon_ID_BALONU, Pilot_ID_PILOTA, CZAS_TRWANIA, MAKSYMALNA_WYSOKOŒÆ, WARUNKI_POGODOWE)
VALUES (5, 5, 5, 5, 130, 3600, 'Pochmurno');


select * from p³atnoœæ;
select * from rezerwacja;
select * from pilot;
select * from lot;
select * from raport_techniczny;
select * from lokalizacja;
select * from klient;
select * from balon;

-- -------------------------------------------------------------------------------
-- POLECENIA:   10 X SELECT  
--( PRZYK£ADY ROZBUDOWANYCH POLECEÑ Z JOIN NA MIN. 3 TABELACH, WARUNKAMI, GROUP BY , podzapytania, funkje ITP )
-- POZIOM ZAAWANSOWANIA MA WP£YW NA OCENÊ                                                   
-- -------------------------------------------------------------------------------



-- 1
SELECT * FROM REZERWACJA WHERE STATUS_REZERWACJI = 'Potwierdzona';

-- 2
SELECT AVG(KWOTA) AS ŒREDNIA_KWOTA FROM P£ATNOŒÆ;

-- 3
SELECT IMIÊ, NAZWISKO, NUMER_LICENCJI 
FROM PILOT 
WHERE STATUS = 'Aktywny';

-- 4
SELECT * FROM BALON WHERE STATUS_TECHNICZNY IN ('W konserwacji', 'Wymaga przegl¹du');

-- 5
SELECT R.KLIENT_ID_KLIENTA, K.IMIÊ, COUNT(*) AS LICZBA_REZERWACJI
FROM REZERWACJA R
JOIN  KLIENT K ON K.ID_KLIENTA =  R.KLIENT_ID_KLIENTA
GROUP BY KLIENT_ID_KLIENTA, K.IMIÊ;

-- 6
SELECT LOT.ID_LOTU, LOT.CZAS_TRWANIA, LOT.WARUNKI_POGODOWE, LOT.MAKSYMALNA_WYSOKOŒÆ, 
       PILOT.IMIÊ, PILOT.NAZWISKO, BALON.MODEL
FROM LOT
JOIN PILOT ON LOT.PILOT_ID_PILOTA = PILOT.ID_PILOTA
JOIN BALON ON LOT.BALON_ID_BALONU = BALON.ID_BALONU;

-- 7
SELECT * FROM P£ATNOŒÆ WHERE YEAR(DATA_P£ATNOŒCI) = 2025;

-- 8
SELECT K.ID_KLIENTA, K.IMIÊ, K.NAZWISKO, 
       COUNT(R.ID_REZERWACJI) AS LICZBA_REZERWACJI
FROM KLIENT K
JOIN REZERWACJA R ON K.ID_KLIENTA = R.KLIENT_ID_KLIENTA
JOIN LOKALIZACJA L ON R.LOKALIZACJA_ID_LOKALIZACJI = L.ID_LOKALIZACJI
GROUP BY K.ID_KLIENTA, K.IMIÊ, K.NAZWISKO
ORDER BY LICZBA_REZERWACJI DESC;

-- 9
SELECT L.ID_LOTU, P.IMIÊ, P.NAZWISKO, B.MODEL, R.LOKALIZACJA_ID_LOKALIZACJI, L.CZAS_TRWANIA
FROM LOT L 
JOIN PILOT P ON L.PILOT_ID_PILOTA = P.ID_PILOTA
JOIN BALON B ON L.BALON_ID_BALONU = B.ID_BALONU
JOIN REZERWACJA R ON L.REZERWACJA_ID_REZERWACJI = R.ID_REZERWACJI
WHERE L.CZAS_TRWANIA > (SELECT AVG(CZAS_TRWANIA) FROM LOT)
ORDER BY L.CZAS_TRWANIA DESC;

-- 10
SELECT K.ID_KLIENTA, K.IMIÊ, K.NAZWISKO,
       COUNT(R.ID_REZERWACJI) AS LICZBA_REZERWACJI,
       COALESCE(SUM(P.KWOTA), 0) AS SUMA_KWOT,
       STRING_AGG(R.STATUS_REZERWACJI, ', ') AS STATUS_REZERWACJI
FROM KLIENT K
LEFT JOIN REZERWACJA R ON K.ID_KLIENTA = R.KLIENT_ID_KLIENTA
LEFT JOIN P£ATNOŒÆ P ON R.ID_REZERWACJI = P.ID_P£ATNOŒCI
GROUP BY K.ID_KLIENTA, K.IMIÊ, K.NAZWISKO
ORDER BY SUMA_KWOT;

-- -------------------------------------------------------------------------------
-- POLECENIA:   5 X UPDATE     (POLECENIA POWINNY WYKORZYSTYWAÆ PODZAPYTANIA, funkcje itp)      
-- POZIOM ZAAWANSOWANIA MA WP£YW NA OCENÊ                                               
-- -

-- 1
UPDATE REZERWACJA
SET STATUS_REZERWACJI ='Anulowana'
WHERE ID_REZERWACJI IN (
    SELECT R.ID_REZERWACJI
    FROM REZERWACJA R
    LEFT JOIN P£ATNOŒÆ P ON R.ID_REZERWACJI = P.ID_P£ATNOŒCI
    WHERE P.ID_P£ATNOŒCI IS NULL
);

-- 2
UPDATE LOT
SET MAKSYMALNA_WYSOKOŒÆ = (
    SELECT AVG(MAKSYMALNA_WYSOKOŒÆ)
    FROM LOT
)
WHERE MAKSYMALNA_WYSOKOŒÆ < (
    SELECT AVG(MAKSYMALNA_WYSOKOŒÆ)
    FROM LOT
);

-- 3
UPDATE BALON
SET STATUS_TECHNICZNY = 'Wymaga przegl¹du'
WHERE DATA_OSTATNIEGO_PRZEGL¥DU < DATEADD(MONTH, -12, GETDATE());

-- 4
UPDATE PILOT
SET TELEFON = -1
WHERE STATUS = 'Nieaktywny';

-- 5
UPDATE P£ATNOŒÆ
SET KWOTA = KWOTA * 0.9
WHERE ID_P£ATNOŒCI IN (
    SELECT R.ID_REZERWACJI
    FROM REZERWACJA R
    WHERE R.KLIENT_ID_KLIENTA IN (
        SELECT KLIENT_ID_KLIENTA
        FROM REZERWACJA
        GROUP BY KLIENT_ID_KLIENTA
        HAVING COUNT(*) > 3
    )
);


-- -------------------------------------------------------------------------------
-- POLECENIA:   5 X DELETE     (TE¯ Z PODZAPYTANIAMI itp)              
-- POZIOM ZAAWANSOWANIA MA WP£YW NA OCENÊ                                        
-- -------------------------------------------------------------------------------



-- 1
DELETE FROM REZERWACJA
WHERE STATUS_REZERWACJI = 'Anulowana'
AND DATA_REZERWACJI < DATEADD(MONTH, -12, GETDATE());

-- 2
DELETE FROM KLIENT 
WHERE ID_KLIENTA IN (
    SELECT ID_KLIENTA
    FROM KLIENT
    LEFT JOIN REZERWACJA R ON KLIENT.ID_KLIENTA = R.KLIENT_ID_KLIENTA
    WHERE R.ID_REZERWACJI IS NULL
);

-- 3
DELETE FROM P£ATNOŒÆ
WHERE ID_P£ATNOŒCI IN (
    SELECT P.ID_P£ATNOŒCI
    FROM P£ATNOŒÆ P
    JOIN REZERWACJA R ON P.ID_P£ATNOŒCI = R.ID_REZERWACJI
    WHERE R.STATUS_REZERWACJI = 'Usuniêta'
);

-- 4
DELETE FROM RAPORT_TECHNICZNY
WHERE BALON_ID_BALONU NOT IN (
    SELECT ID_BALONU FROM BALON
);

-- 5
DELETE FROM LOT 
WHERE CAST(WARUNKI_POGODOWE AS VARCHAR(MAX)) IN ('Burza', 'Silny wiatr');

-- -------------------------------------------------------------------------------
-- USUWANIE STRUKTURY BAZY DANYCH 
-- NALE¯Y USUNAÆ TABELE, A NIE BAZÊ                                           
-- -------------------------------------------------------------------------------
--
DROP TABLE IF EXISTS Raport_Techniczny;
DROP TABLE IF EXISTS Lot;
DROP TABLE IF EXISTS Rezerwacja;
DROP TABLE IF EXISTS Pilot;
DROP TABLE IF EXISTS Balon;
DROP TABLE IF EXISTS Lokalizacja;
DROP TABLE IF EXISTS Klient;
DROP TABLE IF EXISTS P³atnoœæ;
